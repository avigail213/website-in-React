{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\React\\\\React\\\\\\u05E9\\u05D9\\u05E2\\u05D5\\u05E8 4 routing\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8 \\u05E8\\u05D9\\u05E7 \\u05E2\\u05DD routing\\\\my-app\\\\my-app\\\\src\\\\components\\\\loginJ.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect, useRef, useContext } from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport RecipesContext from \"../ourContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginJ = () => {\n  _s();\n\n  let myname = useRef(null);\n  let mypass = useRef(null);\n  const login = useContext(RecipesContext).login;\n  const setlogin = useContext(RecipesContext).setlogin;\n\n  const loginUser = () => {\n    axios.get(`http://localhost:1234/Users/getbyid/${document.getElementById(\"passwordI\").value}/${document.getElementById(\"nameI\").value}`).then(j => setlogin(j.data[0]));\n  };\n\n  const check = () => {\n    let y = myname.current;\n    let b = mypass.current;\n    if (y.value == \"\") y.style.borderColor = \"red\";else y.style.borderColor = \"black\";\n    if (b.value == \"\") b.style.borderColor = \"red\";else b.style.borderColor = \"black\";\n\n    if (b.value != \"\" && y.value != \"\") {\n      y.style.borderColor = \"black\";\n      b.style.borderColor = \"black\";\n      loginUser();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \">\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n\n_s(LoginJ, \"2MiAe/n72UOipcYZb1TWCvu14Ak=\");\n\n_c = LoginJ;\nexport default LoginJ;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginJ\");","map":{"version":3,"sources":["D:/Documents/מסמכים/React/React/שיעור 4 routing/פרויקט ריק עם routing/my-app/my-app/src/components/loginJ.jsx"],"names":["axios","useState","useEffect","useRef","useContext","Link","Outlet","RecipesContext","LoginJ","myname","mypass","login","setlogin","loginUser","get","document","getElementById","value","then","j","data","check","y","current","b","style","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAoBC,SAApB,EAA+BC,MAA/B,EAAuCC,UAAvC,QAAwD,OAAxD;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,kBAA7B;AACA,OAAOC,cAAP,MAA2B,eAA3B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,MAAIC,MAAM,GAACN,MAAM,CAAC,IAAD,CAAjB;AACA,MAAIO,MAAM,GAACP,MAAM,CAAC,IAAD,CAAjB;AACA,QAAMQ,KAAK,GAACP,UAAU,CAACG,cAAD,CAAV,CAA2BI,KAAvC;AACA,QAAMC,QAAQ,GAACR,UAAU,CAACG,cAAD,CAAV,CAA2BK,QAA1C;;AACA,QAAMC,SAAS,GAAC,MAAI;AACpBb,IAAAA,KAAK,CAACc,GAAN,CAAW,uCAAsCC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAAM,IAAGF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAM,EAAtI,EAAyIC,IAAzI,CAA8IC,CAAC,IAAEP,QAAQ,CAACO,CAAC,CAACC,IAAF,CAAO,CAAP,CAAD,CAAzJ;AACD,GAFC;;AAGF,QAAMC,KAAK,GAAC,MAAI;AAEd,QAAIC,CAAC,GAACb,MAAM,CAACc,OAAb;AACA,QAAIC,CAAC,GAACd,MAAM,CAACa,OAAb;AACA,QAAGD,CAAC,CAACL,KAAF,IAAS,EAAZ,EACEK,CAAC,CAACG,KAAF,CAAQC,WAAR,GAAoB,KAApB,CADF,KAGEJ,CAAC,CAACG,KAAF,CAAQC,WAAR,GAAoB,OAApB;AAEF,QAAGF,CAAC,CAACP,KAAF,IAAS,EAAZ,EACEO,CAAC,CAACC,KAAF,CAAQC,WAAR,GAAoB,KAApB,CADF,KAGEF,CAAC,CAACC,KAAF,CAAQC,WAAR,GAAoB,OAApB;;AAEF,QAAGF,CAAC,CAACP,KAAF,IAAS,EAAT,IAAeK,CAAC,CAACL,KAAF,IAAS,EAA3B,EACA;AACEK,MAAAA,CAAC,CAACG,KAAF,CAAQC,WAAR,GAAoB,OAApB;AACAF,MAAAA,CAAC,CAACC,KAAF,CAAQC,WAAR,GAAoB,OAApB;AACAb,MAAAA,SAAS;AACV;AAEF,GArBD;;AAuBE,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAsBD,CAtDD;;GAAML,M;;KAAAA,M;AAwDN,eAAeA,MAAf","sourcesContent":["import axios from \"axios\"\r\nimport { useState , useEffect, useRef, useContext} from \"react\"\r\nimport { Link, Outlet } from \"react-router-dom\"\r\nimport RecipesContext from \"../ourContext\"\r\n\r\nconst LoginJ = () => {\r\n\r\n  let myname=useRef(null)\r\n  let mypass=useRef(null)\r\n  const login=useContext(RecipesContext).login\r\n  const setlogin=useContext(RecipesContext).setlogin\r\n  const loginUser=()=>{\r\n  axios.get(`http://localhost:1234/Users/getbyid/${document.getElementById(\"passwordI\").value}/${document.getElementById(\"nameI\").value}`).then(j=>setlogin(j.data[0]))\r\n}\r\nconst check=()=>{\r\n  \r\n  let y=myname.current\r\n  let b=mypass.current\r\n  if(y.value==\"\")\r\n    y.style.borderColor=\"red\"\r\n  else\r\n    y.style.borderColor=\"black\"\r\n\r\n  if(b.value==\"\")\r\n    b.style.borderColor=\"red\"\r\n  else\r\n    b.style.borderColor=\"black\"\r\n\r\n  if(b.value!=\"\" && y.value!=\"\")\r\n  {\r\n    y.style.borderColor=\"black\"\r\n    b.style.borderColor=\"black\"\r\n    loginUser()\r\n  }\r\n    \r\n}\r\n\r\n  return <div>\r\n      {/* <br></br>\r\n      <div class=\"form-group\">\r\n      <div class=\"col-sm-10\">          \r\n      <input ref={myname} type='text' id=\"nameI\" placeholder='Enter name*'></input>\r\n      </div>\r\n      </div>\r\n      <br></br>\r\n      <div class=\"form-group\">\r\n      <div class=\"col-sm-10\">          \r\n      <input ref={mypass} type='password' id=\"passwordI\" placeholder='Enter password*'></input> \r\n      </div>\r\n      </div>\r\n      <br></br>\r\n      <div class=\"form-group\">        \r\n          <div class=\"col-sm-offset-0 col-sm-10\">\r\n          <button type='button' class=\"btn btn-danger\" onClick={()=>check()}>Login {login==null?<span className=\"badge\">❌</span>:<span className=\"badge\">✔</span>}</button>\r\n          </div>\r\n        </div>\r\n    </div> */}\r\n    ></div>\r\n  \r\n}\r\n\r\nexport default LoginJ\r\n\r\n\t\t\t"]},"metadata":{},"sourceType":"module"}